void menu() {
    int choice;
    while (true) {
        clear();
        mvprintw(5, 10, "=== DODGE THE ROCKS GAME ===");
        mvprintw(7, 12, "1. START GAME");
        mvprintw(8, 12, "2. VIEW SCORE");
        mvprintw(9, 12, "3. EXIT");
        mvprintw(11, 10, "Select an option: ");
        refresh();

        choice = getch(); 
        switch (choice) {
            case '1':
                game_loop(); 
                break;
            case '2':
                view_score(); 
                break;
            case '3':
                return; 
            default:
                mvprintw(13, 10, "Invalid choice. Press any key to try again...");
                getch();
                break;
        }
    }
}

void game_loop() {
    int max_x, max_y;
    getmaxyx(stdscr, max_y, max_x); 

    int player_x = max_x / 2; 
    int player_y = max_y - 2;
    int score = 0;
    int high_score = load_high_score();

    const int num_rocks = 3;     
    int rock_x[num_rocks], rock_y[num_rocks];
    const int rock_width = 3;   
    const int rock_height = 3;   
    int speed_delay = 50000;     

    srand(time(0)); 
    for (int i = 0; i < num_rocks; i++) {
        rock_x[i] = rand() % (max_x - rock_width);
        rock_y[i] = rand() % (max_y / 2);
    }
